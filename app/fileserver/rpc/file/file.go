// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: file.proto

package file

import (
	"context"

	"github.com/cy77cc/hioshop_ms/app/fileserver/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateBucketReq  = pb.CreateBucketReq
	CreateBucketResp = pb.CreateBucketResp
	UploadReq        = pb.UploadReq
	UploadResp       = pb.UploadResp

	File interface {
		// 流式上传分片
		Upload(ctx context.Context, in *UploadReq, opts ...grpc.CallOption) (*UploadResp, error)
		CreateBucket(ctx context.Context, in *CreateBucketReq, opts ...grpc.CallOption) (*CreateBucketResp, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

// 流式上传分片
func (m *defaultFile) Upload(ctx context.Context, in *UploadReq, opts ...grpc.CallOption) (*UploadResp, error) {
	client := pb.NewFileClient(m.cli.Conn())
	return client.Upload(ctx, in, opts...)
}

func (m *defaultFile) CreateBucket(ctx context.Context, in *CreateBucketReq, opts ...grpc.CallOption) (*CreateBucketResp, error) {
	client := pb.NewFileClient(m.cli.Conn())
	return client.CreateBucket(ctx, in, opts...)
}
