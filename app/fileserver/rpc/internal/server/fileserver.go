// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: file.proto

package server

import (
	"context"

	"github.com/cy77cc/hioshop_ms/app/fileserver/rpc/internal/logic"
	"github.com/cy77cc/hioshop_ms/app/fileserver/rpc/internal/svc"
	"github.com/cy77cc/hioshop_ms/app/fileserver/rpc/pb"
)

type FileServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedFileServer
}

func NewFileServer(svcCtx *svc.ServiceContext) *FileServer {
	return &FileServer{
		svcCtx: svcCtx,
	}
}

func (s *FileServer) InitUpload(ctx context.Context, in *pb.InitUploadReq) (*pb.InitUploadResp, error) {
	l := logic.NewInitUploadLogic(ctx, s.svcCtx)
	return l.InitUpload(in)
}

// 流式上传分片
func (s *FileServer) UploadPart(stream pb.File_UploadPartServer) error {
	l := logic.NewUploadPartLogic(stream.Context(), s.svcCtx)
	return l.UploadPart(stream)
}

func (s *FileServer) CompleteUpload(ctx context.Context, in *pb.CompleteUploadReq) (*pb.CompleteUploadResp, error) {
	l := logic.NewCompleteUploadLogic(ctx, s.svcCtx)
	return l.CompleteUpload(in)
}
